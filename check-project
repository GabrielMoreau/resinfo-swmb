#!/bin/bash
#
# 2020/06/11 Gabriel Moreau


# Detect Windows File with no CRLF line terminator
find . \( -name '*.ps1' -o -name '*.psm1' -o -name '*.psd1' -o -name '*.bat' \) -exec file {} \+ | egrep -v '(with CRLF line|/tmp/)'


function msg1 {
   local msg=$1
   local total=$2
 
   printf " | %-6s | %-38s | %4s | %4s | %4i |\n" 'Info' "${msg}" '' '' "${total}"
   }

function msg2 {
   local msg=$1
   local on=$2
   local off=$3

   local status='Info'
   if [ "${on}" != "${off}" ]
   then
      status='Warn'
   fi

   printf " | %-6s | %-38s | %4i | %4i | %4i |\n" "${status}" "${msg}" "${on}" "${off}" $((${on} + ${off}))
   }

# list of files
# all_module=$(find . -path './Modules/SWMB/*.psm1' -print)
all_module=$(find ./Modules/ -name '*.psm1' -print)

printf " | %-6s | %-38s | %4s | %4s | %4s |\n" 'Status' 'Number of tweaks' '' '' ''
printf " | %-6s | %-38s | %4s | %4s | %4s |\n" ':---' ':---' '---:' '---:' '---:'

# global numbers
msg1 "Number of RESINFO tweaks" \
   $(grep -hEi '^Function[[:space:]]Tweak(Enable|Disable|Show|Hide|Install|Uninstall|Add|Remove|Set|Unset|Pin|Unpin).* # RESINFO' ${all_module} | awk '{print $2}' | wc -l)

msg2 "Number of Enable and Disable tweaks" \
   $(grep -hEi '^Function[[:space:]]Tweak(Enable)' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Disable)' ${all_module} | awk '{print $2}' | wc -l)

msg2 "Number of Install and Uninstall tweaks" \
   $(grep -hEi '^Function[[:space:]]Tweak(Install)' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Uninstall)' ${all_module} | awk '{print $2}' | wc -l)

msg2 "Number of Show and Hide tweaks" \
   $(grep -hEi '^Function[[:space:]]Tweak(Show)' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Hide)' ${all_module} | awk '{print $2}' | wc -l)

msg2 "Number of Add and Remove tweaks" \
   $(grep -hEi '^Function[[:space:]]Tweak(Add)' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Remove)' ${all_module} | awk '{print $2}' | wc -l)

msg2 "Number of Set and Unset tweaks" \
   $(grep -hEi '^Function[[:space:]]Tweak(Set)' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Unset)' ${all_module} | awk '{print $2}' | wc -l)

msg2 "Number of Pin and Unpin tweaks" \
   $(grep -hEi '^Function[[:space:]]Tweak(Pin)' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Unpin)' ${all_module} | awk '{print $2}' | wc -l)
   
msg1 "Number of total tweaks GPO"  \
   $(grep -hEi '^Function Tweak(Enable|Disable|Show|Hide|Install|Uninstall|Add|Remove|Set|Unset|Pin|Unpin)' ${all_module} | wc -l)

msg1 "Number of Sys tweaks (system)" \
   $(grep -hEi '^Function[[:space:]]Tweak(Sys)' ${all_module} | awk '{print $2}' | wc -l)

msg1 "Number of View tweaks (debug)" \
   $(grep -hEi '^Function[[:space:]]Tweak(View)' ${all_module} | awk '{print $2}' | wc -l)

msg1 "Number of Obsolete tweaks" \
   $(grep -hEi '^Function[[:space:]]Tweak.* # Obsolete' ${all_module} | awk '{print $2}' | wc -l)

msg1 "Number of total tweaks functions" \
   $(grep -hEi '^Function[[:space:]]Tweak' ${all_module} | awk '{print $2}' | wc -l)

# function that are not in case Enable|Disable|Show|Hide|Install|Uninstall|Add|Remove|Set|Unset|Pin|Unpin
grep -hEi '^Function[[:space:]]' ${all_module} \
   | grep -Eiv '^Function (SWMB_|Tweak(Enable|Disable|Show|Hide|Install|Uninstall|Add|Remove|Set|Unset|Pin|Unpin|Sys|View))' \
   | grep -v '# Obsolete' \
   | awk '{print $2}' \
   | xargs -r -n 1 printf "Warning: special function: %s\n"


# detect a forgotten rule and multiple identical rule definitions in our rules
while read rule
do
   for status in 'Enable' 'Disable'
   do
      nb_rule=$(grep -E "^Function[[:space:]]Tweak${status}${rule}[[:space:]]{" ${all_module} | wc -l)
      if [ ${nb_rule} -eq 0 ]
      then
         echo "Error: undefined function: " ${status}${rule}
      elif [ ${nb_rule} -gt 1 ]
      then
         echo "Error: ${nb_rule} copies of the function: " ${status}${rule}
      fi
   done
done < <(grep -hEi '^Function[[:space:]]Tweak(Enable|Disable)' ${all_module} \
   | awk '{print $2}' \
   | sed -Ee 's/^Tweak(Enable|Disable)//i;' \
   | sort -u)

# Enable|Disable|Show|Hide|Install|Uninstall|Add|Remove|Set|Unset|Pin|Unpin...
kind_rule=$(grep -i '^Function[[:space:]]Tweak' ${all_module} \
   | awk '{print $2}' \
   | grep -Eo '^[A-Z][a-z]+' \
   | sort -u \
   | tr '\n' '|' \
   | sed -e 's/|$//;')
# detect the definition of a missing preset
for rule in $(grep -hEi "^Function[[:space:]]Tweak(${kind_rule})" ${all_module} \
   | awk '{print $2}' \
   | sed -Ee "s/^(${kind_rule})//i;" \
   | sort -u)
do
   if ! grep -Eq "^(#[[:space:]])?(${kind_rule})${rule}" Presets/*.preset
   then
      # Do not propose preset for current user
      #echo ${rule}| grep -q '_CU$' && continue
      if ! grep -Eq "#[[:space:]](${kind_rule})${rule}" Presets/*.preset
      then
         echo "Warning: no preset proposed for rule: ${rule}"
      fi
   fi
done
