#!/bin/bash
#
# check-project
#
# 2020/06/11 Gabriel Moreau <Gabriel.Moreau@univ-grenoble-alpes.fr>

function msg1 {
   local msg=$1
   local total=$2

   printf " | %-6s | %-38s | %4s | %4s | %4i |      |      |\n" 'Info' "${msg}" '' '' "${total}"
   }

function msg2 {
   local msg=$1
   local total=$2
   local totalcu=$3

   printf " | %-6s | %-38s | %10i || %4i | %10i ||\n" 'Info'  "${msg}" $((${total} - ${totalcu})) "${total}" "${totalcu}"
   }

function msg4 {
   local msg=$1
   local on=$2
   local off=$3
   local onci=$4
   local offci=$5

   local status='Info'
   if [ "${on}" != "${off}" ]
   then
      status='Warn'
   fi

   printf " | %-6s | %-38s | %4i | %4i | %4i | %4i | %4i |\n" "${status}" "${msg}" $((${on} - ${onci})) $((${off} - ${offci})) $((${on} + ${off}))  "${onci}" "${offci}"
   }

# list of files
# all_module=$(find . -path './Modules/SWMB/*.psm1' -print)
all_module=$(find ./Modules/ -name '*.psm1' -print)
preset_all=$(ls -1 Presets/{CurrentUser,LocalMachine}-All.preset)

printf " | %-6s | %-38s | %10s || %4s | %10s ||\n" 'Status' 'Number of tweaks' 'LM' 'All' 'CU'
printf " | %-6s | %-38s | %4s | %4s | %4s | %4s | %4s |\n" ':---' ':---' '---:' '---:' '---:' '---:' '---:'

# global numbers
msg2 "Number of RESINFO tweaks" \
   $(grep -hEi '^Function[[:space:]]Tweak(Enable|Disable|Show|Hide|Install|Uninstall|Add|Remove|Set|Unset|Pin|Unpin).* # RESINFO' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Enable|Disable|Show|Hide|Install|Uninstall|Add|Remove|Set|Unset|Pin|Unpin).*_CU { # RESINFO' ${all_module} | awk '{print $2}' | wc -l)

msg4 "Number of Enable and Disable tweaks" \
   $(grep -hEi '^Function[[:space:]]Tweak(Enable)' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Disable)' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Enable).*_CU[[:space:]]' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Disable).*_CU[[:space:]]' ${all_module} | awk '{print $2}' | wc -l)

msg4 "Number of Install and Uninstall tweaks" \
   $(grep -hEi '^Function[[:space:]]Tweak(Install)' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Uninstall)' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Install).*_CU[[:space:]]' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Uninstall).*_CU[[:space:]]' ${all_module} | awk '{print $2}' | wc -l)

msg4 "Number of Show and Hide tweaks" \
   $(grep -hEi '^Function[[:space:]]Tweak(Show)' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Hide)' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Show).*_CU[[:space:]]' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Hide).*_CU[[:space:]]' ${all_module} | awk '{print $2}' | wc -l)

msg4 "Number of Add and Remove tweaks" \
   $(grep -hEi '^Function[[:space:]]Tweak(Add)' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Remove)' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Add).*_CU[[:space:]]' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Remove).*_CU[[:space:]]' ${all_module} | awk '{print $2}' | wc -l)

msg4 "Number of Set and Unset tweaks" \
   $(grep -hEi '^Function[[:space:]]Tweak(Set)' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Unset)' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Set).*_CU[[:space:]]' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Unset).*_CU[[:space:]]' ${all_module} | awk '{print $2}' | wc -l)

msg4 "Number of Pin and Unpin tweaks" \
   $(grep -hEi '^Function[[:space:]]Tweak(Pin)' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Unpin)' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Pin).*_CU[[:space:]]' ${all_module} | awk '{print $2}' | wc -l) \
   $(grep -hEi '^Function[[:space:]]Tweak(Unpin).*_CU[[:space:]]' ${all_module} | awk '{print $2}' | wc -l)

msg1 "Number of total tweaks GPO"  \
   $(grep -hEi '^Function Tweak(Enable|Disable|Show|Hide|Install|Uninstall|Add|Remove|Set|Unset|Pin|Unpin)' ${all_module} | wc -l)

msg1 "Number of Sys tweaks (system)" \
   $(grep -hEi '^Function[[:space:]]Tweak(Sys)' ${all_module} | awk '{print $2}' | wc -l)

msg1 "Number of View tweaks (debug)" \
   $(grep -hEi '^Function[[:space:]]Tweak(View)' ${all_module} | awk '{print $2}' | wc -l)

msg1 "Number of Obsolete tweaks" \
   $(grep -hEi '^Function[[:space:]]Tweak.* # Obsolete' ${all_module} | awk '{print $2}' | wc -l)

msg1 "Number of total tweaks functions" \
   $(grep -hEi '^Function[[:space:]]Tweak' ${all_module} | awk '{print $2}' | wc -l)

echo ''

echo "Check function that are not in case Enable|Disable|Show|Hide|Install|Uninstall|Add|Remove|Set|Unset|Pin|Unpin"
grep -hEi '^Function[[:space:]]' ${all_module} \
   | grep -Eiv '^Function (SWMB_|Tweak(Enable|Disable|Show|Hide|Install|Uninstall|Add|Remove|Set|Unset|Pin|Unpin|Sys|View))' \
   | grep -v '# Obsolete' \
   | awk '{print $2}' \
   | xargs -r -n 1 printf "Warning: special function: %s\n"


echo "Check a forgotten rule and multiple identical rule definitions in our rules: Enable / Disable"
while read rule
do
   for status in 'Enable' 'Disable'
   do
      nb_rule=$(grep -E "^Function[[:space:]]Tweak${status}${rule}[[:space:]]{" ${all_module} | wc -l)
      if [ ${nb_rule} -eq 0 ]
      then
         echo "Error: undefined function: " ${status}${rule}
      elif [ ${nb_rule} -gt 1 ]
      then
         echo "Error: ${nb_rule} copies of the function: " ${status}${rule}
      fi
   done
done < <(grep -hEi '^Function[[:space:]]Tweak(Enable|Disable)' ${all_module} \
   | awk '{print $2}' \
   | sed -Ee 's/^Tweak(Enable|Disable)//i;' \
   | sort -u)

echo "Check a forgotten rule and multiple identical rule definitions in our rules: Install / Uninstall"
while read rule
do
   for status in 'Install' 'Uninstall'
   do
      grep -q "^${status}${rule}" check-ignore.txt && continue
      nb_rule=$(grep -E "^Function[[:space:]]Tweak${status}${rule}[[:space:]]{" ${all_module} | wc -l)
      if [ ${nb_rule} -eq 0 ]
      then
         echo "Error: undefined function: " ${status}${rule}
      elif [ ${nb_rule} -gt 1 ]
      then
         echo "Error: ${nb_rule} copies of the function: " ${status}${rule}
      fi
   done
done < <(grep -hEi '^Function[[:space:]]Tweak(Install|Uninstall)' ${all_module} \
   | awk '{print $2}' \
   | sed -Ee 's/^Tweak(Install|Uninstall)//i;' \
   | sort -u)

echo "Check a forgotten rule and multiple identical rule definitions in our rules: Add / Remove"
while read rule
do
   for status in 'Add' 'Remove'
   do
      nb_rule=$(grep -E "^Function[[:space:]]Tweak${status}${rule}[[:space:]]{" ${all_module} | wc -l)
      if [ ${nb_rule} -eq 0 ]
      then
         echo "Error: undefined function: " ${status}${rule}
      elif [ ${nb_rule} -gt 1 ]
      then
         echo "Error: ${nb_rule} copies of the function: " ${status}${rule}
      fi
   done
done < <(grep -hEi '^Function[[:space:]]Tweak(Add|Remove)' ${all_module} \
   | awk '{print $2}' \
   | sed -Ee 's/^Tweak(Add|Remove)//i;' \
   | sort -u)

echo "Check tweaks that are not defined in a preset file"
# Enable|Disable|Show|Hide|Install|Uninstall|Add|Remove|Set|Unset|Pin|Unpin...
kind_rule=$(grep -i '^Function[[:space:]]Tweak' ${all_module} \
   | grep -Ev '# (Obsolete|Experimental)' \
   | awk '{print $2}' \
   | sed -e 's/^Tweak//;' \
   | grep -Eo '^[A-Z][a-z]+' \
   | sort -u \
   | tr '\n' '|' \
   | sed -e 's/|$//;')
# detect the definition of a missing preset
for rule in $(grep -hEi "^Function[[:space:]]Tweak(${kind_rule})" ${all_module} \
   | grep -Ev '# (Obsolete|Experimental)' \
   | awk '{print $2}' \
   | sed -e 's/^Tweak//;' \
   | sort -u)
do
   if ! grep -Eq "^(#[[:space:]])?${rule}\b" ${preset_all}
   then
      # Do not propose preset for current user
      if ! grep -Eq "#[[:space:]]${rule}\b" ${preset_all}
      then
         grep -Eh "^Function[[:space:]]Tweak${rule}\b" ${all_module} \
           | awk '{print $2}' \
           | sed -e 's/^Tweak//;' \
           | xargs printf "Warning: no preset proposed for tweak: %s\n"
      fi
   fi
done

echo "Check tweaks defined in preset files that have no implementation"
# reverse check all preset files
for rule in $(grep -Ehv '^([#[:space:]])*\$(PRESET|IMPORT)' Presets/*.preset \
  | sed -e 's/##.*//; s/[[:space:]]/\n/g;' \
  | grep -v '^#' \
  | grep -Ev '^\$(PRESET|IMPORT)' \
  | grep . \
  | sort -u)
do
  if ! grep -q "^Function[[:space:]]Tweak${rule}\b" ${all_module}
  then
    echo "Warning: tweak doesn't have an implementaton: ${rule}"
  fi
done

echo "Check Windows File with no CRLF line terminator"
find . \( -name '*.ps1' -o -name '*.psm1' -o -name '*.psd1' -o -name '*.bat' \) -exec file {} \+ | egrep -v '(with CRLF line|/tmp/)' | sed 's/^/ /;'

echo "Check if two tweak have the same name"
grep -ih '^Function[[:space:]]Tweak' ${all_module} \
  | awk '{print $2}' \
  | sed -e 's/^Tweak//; s/^Enable//; s/^Disable//; s/^Install//; s/^Uninstall//; s/^Set//; s/^Unset//; s/^Show//; s/^Hide//;' \
  | grep -v '^View' \
  | sort \
  | uniq -c \
  | grep -Ev '      (1|2) '

echo "Check code message for each tweak"
ack -A1 '^Function TweakEnable'    | grep -Ev '(Function TweakEnable|"Enabling |^--)'
ack -A1 '^Function TweakDisable'   | grep -Ev '(Function TweakDisable|"Disabling |^--)'
ack -A1 '^Function TweakInstall'   | grep -Ev '(Function TweakInstall|"Installing |^--)'
ack -A1 '^Function TweakUninstall' | grep -Ev '(Function TweakUninstall|"Uninstalling |^--)'
ack -A1 '^Function TweakShow'      | grep -Ev '(Function TweakShow|"Showing |^--)'
ack -A1 '^Function TweakHide'      | grep -Ev '(Function TweakHide|"Hiding |^--)'
ack -A1 '^Function TweakAdd'       | grep -Ev '(Function TweakAdd|"Adding |^--)'
ack -A1 '^Function TweakRemove'    | grep -Ev '(Function TweakRemove|"Removing |^--)'
ack -A1 '^Function TweakSet'       | grep -Ev '(Function TweakSet|"Setting |^--)'
ack -A1 '^Function TweakUnset'     | grep -Ev '(Function TweakUnset|"Unsetting |^--)'
ack -A1 '^Function TweakView'      | grep -Ev '(Function TweakView|"Viewing |^--)'
ack -A1 '^Function TweakPin'       | grep -Ev '(Function TweakPin|"Pinning |^--)'
ack -A1 '^Function TweakUnpin'     | grep -Ev '(Function TweakUnpin|"Unpinning |^--)'

echo "Check for unnecessary spaces at the end of lines"
ack -l --ignore-dir=tmp --ignore-file=ext:bat --ignore-file=ext:ps1 --ignore-file=ext:psm1 --ignore-file=ext:psd1 --ignore-file=ext:nsi '\s+$'
ack -l --ignore-dir=tmp '\s+\r$'

echo "Check double tweak in NEWS.md file"
grep '^\*' NEWS.md | cut -f 2 -d '-' | sed -e 's#[[:space:]/]#\n#g;' | grep '^`[[:alpha:]]' | sort | uniq -c | grep -v ' 1 '

echo "Check import powershell module"
for psm in ./Modules/*.psm1 ./Modules/SWMB/*.psm1
do
  pwsh -Command "Import-Module ${psm}" | sed 's/^/ /;'
done
